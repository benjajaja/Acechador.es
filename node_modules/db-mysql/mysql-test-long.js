var mysql = require("./db-mysql");

var selectStart = new Date();
var settings = {
//    hostname: "localhost",
    socket: "/var/run/mysqld/mysqld.sock",
    user: "root",
    password: "password",
    database: "node"
};

/*

CREATE TABLE `users`( `id` INT NOT NULL AUTO_INCREMENT, `name` VARCHAR(255) NOT NULL, `profile` TEXT default NULL, `birthdate` DATE default NULL, `time` TIME default NULL, `created` DATETIME NOT NULL, `role` ENUM('user', 'admin') NOT NULL default 'user', `approved` TINYINT(1) NOT NULL default 0, PRIMARY KEY(`id`) );

INSERT INTO `users` VALUES(NULL, 'John Doe', 'I\'m a programmer', '1978-07-13', '18:30:00', NOW(), 'admin', 1);
INSERT INTO `users` VALUES(NULL, 'Jane Doe', 'I\'m great!', '1980-09-18', '20:15:00', NOW(), 'user', 0);
INSERT INTO `users` VALUES(NULL, 'Mark Doe', 'I\'m a programmer', '1982-11-22', '18:30:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Jessica Doe', 'I\'m great!', '1981-10-10', '20:15:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Mathew Doe', 'I\'m a programmer', '1978-07-13', '18:30:00', NOW(), 'admin', 1);
INSERT INTO `users` VALUES(NULL, 'Mario Doe', 'I\'m great!', '1980-09-18', '20:15:00', NOW(), 'user', 0);
INSERT INTO `users` VALUES(NULL, 'Maria Doe', 'I\'m a programmer', '1982-11-22', '18:30:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Jennifer Doe', 'I\'m great!', '1981-10-10', '20:15:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Jake Doe', 'I\'m a programmer', '1978-07-13', '18:30:00', NOW(), 'admin', 1);
INSERT INTO `users` VALUES(NULL, 'Lora Doe', 'I\'m great!', '1980-09-18', '20:15:00', NOW(), 'user', 0);
INSERT INTO `users` VALUES(NULL, 'Brittney Doe', 'I\'m a programmer', '1982-11-22', '18:30:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Laura Doe', 'I\'m great!', '1981-10-10', '20:15:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Pamela Doe', 'I\'m great!', '1980-09-18', '20:15:00', NOW(), 'user', 0);
INSERT INTO `users` VALUES(NULL, 'Jack Doe', 'I\'m a programmer', '1982-11-22', '18:30:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Nicolas Doe', 'I\'m great!', '1981-10-10', '20:15:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Francis Doe', 'I\'m a programmer', '1978-07-13', '18:30:00', NOW(), 'admin', 1);
INSERT INTO `users` VALUES(NULL, 'William Doe', 'I\'m great!', '1980-09-18', '20:15:00', NOW(), 'user', 0);
INSERT INTO `users` VALUES(NULL, 'Bill Doe', 'I\'m a programmer', '1982-11-22', '18:30:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Dave Doe', 'I\'m great!', '1981-10-10', '20:15:00', NOW(), 'user', 1);
INSERT INTO `users` VALUES(NULL, 'Dana Doe', 'I\'m a programmer', '1978-07-13', '18:30:00', NOW(), 'admin', 1);
INSERT INTO `users` VALUES(NULL, 'Joey Doe', 'I\'m a programmer', '1978-07-13', '18:30:00', NOW(), 'admin', 1);
INSERT INTO `users` VALUES(NULL, 'Lorna Doe', 'I\'m great!', '1980-09-18', '20:15:00', NOW(), 'user', 0);

*/

console.log("BEFORE SYNC CONNECT");
new mysql.Database(settings).on("error", function(error) {
    console.log("ERROR: " + error);
}).on("ready", function(server) {
    console.log("[S] Connected to " + server.hostname + " (" + server.version + ")");

    console.log("BEFORE SYNC QUERY");
    query = this.query("SELECT * FROM users").on("error", function(error) {
        console.log("[S] QUERY ERROR: " + error);
    }).on("each", function(row) {
        console.log("[S] ROW ID: " + row.id);
    }).on("success", function(rows, columns) {
        console.log("[S] Columns:");
        console.log(columns);
        if (rows) {
            console.log("[S] First row:");
            console.log(rows[0]);
            console.log("[S] " + rows.length + " TOTAL ROWS");
        }
    }).execute({
        async: false,
        start: function(query) {
            console.log("[S] " + query);
        },
        finish: function() {
            console.log("[S] " + (new Date() - selectStart) + " ms.");
        }
    });
    console.log("AFTER SYNC QUERY");
}).connect({ async: false });
console.log("AFTER SYNC CONNECT");
//

console.log("BEFORE CONNECT");

new mysql.Database(settings).on("error", function(error) {
    console.log("[1] ERROR: " + error);
}).on("ready", function() {
    console.log("[1] CONNECTED: " + this.isConnected()); // true
    console.log("[1] DISCONNECTING NOW");
    this.disconnect();
    console.log("[1] CONNECTED: " + this.isConnected()); // false

    this.query("SELECT * FROM users").on("error", function(error) {
        console.log("[1] ERROR: " + error);
    }).execute();
}).connect();

new mysql.Database(settings).on("error", function(error) {
    console.log("ERROR: " + error);
}).on("ready", function(server) {
    console.log("[2] Connected to " + server.hostname + " (" + server.version + ")");

    query = this.query("SELECT * FROM users").on("error", function(error) {
        console.log("[2] QUERY ERROR: " + error);
    }).on("each", function(row) {
        console.log("[2] ROW ID: " + row.id);
    }).on("success", function(rows, columns) {
        console.log("[2] Columns:");
        console.log(columns);
        if (rows) {
            console.log("[2] First row:");
            console.log(rows[0]);
            console.log("[2] " + rows.length + " TOTAL ROWS");
        }
    }).execute({
        start: function(query) {
            console.log("[2] " + query);
        },
        finish: function() {
            console.log("[2] " + (new Date() - selectStart) + " ms.");
        }
    });
}).connect();

new mysql.Database(settings).on("error", function(error) {
    console.log("ERROR: " + error);
}).on("ready", function(server) {
    console.log("[3] Connected to " + server.hostname + " (" + server.version + ")");

    query = this.query("SELECT * FROM users ORDER BY id LIMIT 3").on("error", function(error) {
        console.log("[3] QUERY ERROR: " + error);
    }).on("success", function(rows, columns) {
        console.log("[3] Columns:");
        console.log(columns);
    }).on("each", function(row, index, last) {
        console.log("[3] Row #" + (index + 1) + ":");
        console.log(row);
        if (last) {
            console.log("[3] " + (index + 1) + " TOTAL ROWS");
        }
    }).execute({
        start: function(query) {
            console.log("[3] " + query);
        },
        finish: function() {
            console.log("[3] " + (new Date() - selectStart) + " ms.");
        }
    });
}).connect();

new mysql.Database(settings).on("error", function(error) {
    console.log("ERROR: " + error);
}).on("ready", function(server) {
    console.log("[4] Connected to " + server.hostname + " (" + server.version + ")");

    query = this.query("SELECT * FROM users", function(error, rows) {
        if (error) {
            console.log("[4] QUERY ERROR: " + error);
            return;
        }
        console.log("[4] " + rows.length + " TOTAL ROWS");
    }).execute();
}).connect();

new mysql.Database(settings).on("error", function(error) {
    console.log("ERROR: " + error);
}).on("ready", function(server) {
    console.log("[5] Connected to " + server.hostname + " (" + server.version + ")");

    query = this.query("SELECT * FROM users").execute(function(error, rows, columns) {
        if (error) {
            console.log("[5] QUERY ERROR: " + error);
            return;
        }
        console.log("[5] COLUMNS: ");
        console.log(columns);
        console.log("[5] " + rows.length + " TOTAL ROWS");
    });
}).connect();

console.log("AFTER CONNECT");
